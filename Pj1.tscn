[gd_scene load_steps=8 format=2]

[ext_resource path="res://Assets/Characters/12/gladiador.tres" type="SpriteFrames" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

export var maxspeed: = 400.0
export var minspeed: = 100.0
export var jumpheight: = 150.0
export var jumptime: = 0.5
export var fallspeed: = 0.4

onready var jumpforce : float = ((2.0 * jumpheight) / jumptime) * -1.0
onready var jumpfall : float = ((-2.0 * jumpheight) / (jumptime * jumptime)) * -1.0
onready var gravity : float = ((-2.0 * jumpheight) / (fallspeed * fallspeed)) * -1.0

var direction: = Vector2.ZERO
var acceleration: = 0.5

func _physics_process(delta):
	direction.x = get_input_velocity()
	direction.y += get_gravity() * delta
	animations()
	
	if is_on_floor() and Input.is_action_just_pressed(\"jump\"):
		jumping()
	
	
	direction = move_and_slide(direction, Vector2.UP)
	var collision: = move_and_collide(direction * delta)
	

func ataques():
	if Input.is_action_just_pressed(\"attaque\"):
		$spr_player.play(\"atack\")

func animations():
	if direction.x != 0 and is_on_floor():
		$spr_player.play(\"walk\")
	elif direction.y < 0:
		$spr_player.play(\"jump\")
	elif direction.y > 0 and !is_on_floor():
		$spr_player.play(\"fall\")
	else:
		$spr_player.play(\"idle\")

func jumping():
	direction.y += jumpforce
	return(direction.y)

func get_input_velocity() -> float:
	if Input.is_action_pressed(\"moveR\"):
		acceleration = 0.2
		if direction.x < maxspeed:
			direction.x += lerp(minspeed, maxspeed, acceleration)
		else:
			direction.x = maxspeed
		$spr_player.set_flip_h(false)
		$coll_player.set_position(Vector2( 0, 0 ))
	elif Input.is_action_pressed(\"moveL\"):
		acceleration = 0.2
		if direction.x > -maxspeed:
			direction.x += -lerp(minspeed, maxspeed, acceleration)
		else:
			direction.x = -maxspeed
		$spr_player.set_flip_h(true)
		$coll_player.set_position(Vector2(-12.557, 0))
	else:
		acceleration = 0.5
		while direction.x != 0:
			direction.x -= lerp(direction.x, 0, acceleration)
	return (direction.x)

func get_gravity() -> float:
	return jumpfall if jumping() else gravity

"

[sub_resource type="CapsuleShape2D" id=2]
radius = 26.8746
height = 0.0

[sub_resource type="CapsuleShape2D" id=3]
radius = 26.9586
height = 0.296265

[sub_resource type="CircleShape2D" id=6]

[sub_resource type="Animation" id=4]
resource_name = "ataque"

[sub_resource type="Animation" id=5]
resource_name = "move 2 (copy)"
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 0.7, 1, 1.3, 1.6, 1.9, 2.2, 2.5, 2.8, 3 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 40, 0 ), Vector2( 80, 0 ), Vector2( 120, 0 ), Vector2( 160, 0 ), Vector2( 200, 0 ), Vector2( 157.143, 0 ), Vector2( 114.286, 0 ), Vector2( 71.4286, 0 ), Vector2( 28.5714, 0 ), Vector2( 0, 0 ) ]
}

[node name="Player1" type="Node2D"]

[node name="player" type="KinematicBody2D" parent="."]
collision_mask = 30
script = SubResource( 1 )

[node name="spr_player" type="AnimatedSprite" parent="player"]
position = Vector2( -5.52697, -17.7713 )
scale = Vector2( 2.45072, 2.54835 )
frames = ExtResource( 1 )
animation = "idle"

[node name="coll_player" type="CollisionShape2D" parent="player"]
position = Vector2( 0, -1.90735e-06 )
shape = SubResource( 2 )

[node name="area_coll" type="Area2D" parent="player/coll_player"]
collision_mask = 30

[node name="coll_area" type="CollisionShape2D" parent="player/coll_player/area_coll"]
shape = SubResource( 3 )

[node name="ray" type="RayCast2D" parent="player/coll_player"]
modulate = Color( 0, 0.94902, 0.12549, 1 )
scale = Vector2( 2.20808, 0.673875 )
collision_mask = 58

[node name="area_player" type="Area2D" parent="player"]

[node name="coll_area" type="CollisionShape2D" parent="player/area_player"]
modulate = Color( 0.337255, 1, 0, 1 )
shape = SubResource( 6 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="player"]
anims/ataque = SubResource( 4 )
"anims/move 2 (copy)" = SubResource( 5 )
